<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>mvrck</title>
    <link>https://mvrck.jp/</link>
    <description>Recent content on mvrck</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-JP</language>
    <lastBuildDate>Sun, 23 Dec 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://mvrck.jp/feed.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>GPD Pocket2 のキーボードファームウェアが出ていた</title>
      <link>https://mvrck.jp/blog/gpd-pocket2-keyboard-firmware/</link>
      <pubDate>Sun, 23 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://mvrck.jp/blog/gpd-pocket2-keyboard-firmware/</guid>
      <description> バッククォートと謎の半/全キーとで発行するコードを異なるものにするファームウェアが出ていたので適用しました。
 公式ページ GPD Pocket 2 Firmware &amp;amp; Driver &amp;amp; BIOS から 「GPD Pocket 2 Keyboard Firmware (Japan)」をたどって入手  変更点 適用後のスキャンコードは以下の通り、バッククォートキーが変化します。
   キー FW適用前 FW適用後     半/全 0x0029 0x0029   バッククォート 0x0029 0x007D    なお、ファームウェアに添付されているレジストリファイルを適用するとJIS配列相当として認識されるようになってしまうので、キーの表示をそのまま活かしたいときは、ファームウェアだけを当てて手動で調整する必要があります。
調整例 バッククォートキーは、バックスラッシュ・円マークキー（スキャンコード 0x007D）として機能するようになっているので、表記通りバッククォート（0x0029）に。
半/全キーはUS配列としてはバッククォート（0x0029）となっているので、これを適当なキーに（W10Wheel.NET で スクロールキーに割り当てている ScrollLock: 0x0046 としてみました。ついでに CapsLock: 0x003A を Application: 0xE05D に）。
ということで、こんな感じに。 US配列の外付けキーボードではバッククォートが使えなくなるのが難点です。
   キー FW適用前 FW適用後 調整後     半/全 0x0029 0x0029 0x0046 （ScrollLock）   CapsLock 0x003A 0x003A 0xE05D （Application）   バッククォート 0x0029 0x007D 0x0029 （バッククォート）     </description>
    </item>
    
    <item>
      <title>Hugo 0.52 でファイルキャッシュの設定が変わった</title>
      <link>https://mvrck.jp/blog/hugo-0-52-config-cache/</link>
      <pubDate>Sun, 16 Dec 2018 00:46:00 +0900</pubDate>
      
      <guid>https://mvrck.jp/blog/hugo-0-52-config-cache/</guid>
      <description>ひさしぶりに記事を更新したら Hugo さんが急にエラーを出したため困惑していたところ、 なんと Hugo 0.52 からファイルキャッシュの設定方法が変わっていたうえ、相対パスを受け付けなくなっていました。
Error: failed to create file caches from configuration: &amp;quot;cache/hugo&amp;quot; must resolve to an absolute directory  Hugo のドキュメントを参考に、設定ファイルを書き換える必要があります。 このサイトの config.toml だと
cachedir = &amp;#34;cache&amp;#34; だったものを
[caches] [caches.getjson] dir = &amp;#34;:resourceDir/_gen&amp;#34; maxAge = -1 に変更しました（必要ならJSON以外も設定）。
今まではプロジェクトルート階層にある cache ディレクトリに生成されていたものが resources/_gen/getjson の中に作られるようになります。 :resourceDir は resourceDir の設定を書いておけば変更可能ですが、ディレクトリ構成にこだわりはないのでおとなしくデフォルトを使うことにします。</description>
    </item>
    
    <item>
      <title>GPD Pocket2 (7Y30)</title>
      <link>https://mvrck.jp/blog/gpd-pocket2-7y30/</link>
      <pubDate>Mon, 05 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://mvrck.jp/blog/gpd-pocket2-7y30/</guid>
      <description>高確率でカバンの中でアルミ製カイロになっている GPD Pocket (Z8750) の置き換えとして、 GPD Pocket2 (7Y30) を導入しました。モノは悪くない。
IME切替問題 修飾キーが左側にしかないため、 左右のAltでIMEのON/OFFを切り替える手法 が使えない問題。
CtrlでIMEをOFF、AltでONとして回避しました。
 [alt-ime-ahk.ahk を変更] ; (前略) *~LCtrl::Send {Blind}{vk07} *~LAlt::Send {Blind}{vk07} *~RAlt::Send {Blind}{vk07} ; 左 Ctrl 空打ちで IME を OFF LCtrl up:: if (A_PriorHotkey == &amp;quot;*~LCtrl&amp;quot;) { IME_SET(0) } Return ; 左 Alt 空打ちで IME を ON LAlt up:: if (A_PriorHotkey == &amp;quot;*~LAlt&amp;quot;) { IME_SET(1) } Return ; 右 Alt 空打ちで IME を ON RAlt up:: if (A_PriorHotkey == &amp;quot;*~RAlt&amp;quot;) { IME_SET(1) } Return   外付けキーボードの使用も考え、右Altの設定は残しました。</description>
    </item>
    
    <item>
      <title>About mvrck.jp</title>
      <link>https://mvrck.jp/about/</link>
      <pubDate>Fri, 26 May 2017 00:00:00 +0900</pubDate>
      
      <guid>https://mvrck.jp/about/</guid>
      <description>RSS Feed このウェブサイトでは、最近の更新情報をRSSフィードとして配信しています。
License 特に表記がない限り、このウェブサイトの内容は「クリエイティブ・コモンズ 表示-非営利 4.0 国際 パブリック・ライセンス（CC BY-NC 4.0）」のもとで公開しています。
Except where otherwise noted, content on this site is licensed under a Creative Commons Attribution-NonCommercial 4.0 International license (CC BY-NC 4.0).
Contact ご意見・励ましのお便りなどは、お問い合わせフォームにて賜ります。</description>
    </item>
    
    <item>
      <title>VAIO P (VPCP11) に Lubuntu 13.04 を導入</title>
      <link>https://mvrck.jp/blog/lubuntu-on-vaio-p/</link>
      <pubDate>Tue, 09 Jul 2013 00:00:00 +0000</pubDate>
      
      <guid>https://mvrck.jp/blog/lubuntu-on-vaio-p/</guid>
      <description>Windows 7 の動作がどうしても一呼吸遅い感じがして、積極的には使わなくなってしまった後期型 VAIO P に Lubuntu を入れてみました。
いちおう新しくパーティションを切って、元の環境にも戻せるようにしておきましたが、 Lubuntu が特に目立った設定もしないまま予想以上の快適さで動いているので、 Windows 7 がますますいらない子になりつつあります。
以下、設定。
grub4dos (on Windows 7) 経由でブートできるようにする grldr と grldr.mbr を c:\ にコピー
 [c:\menu.lst] timeout 4 default /Linux title Linux root (hd0,3) kernel /boot/grub/i386-pc/core.img title Reboot reboot   bcdedit /create で項目を追加：
&amp;gt; bcdedit /create /d &amp;quot;Linux&amp;quot; /application bootsector {__UUID__}  返ってきた値を使って、
&amp;gt; bcdedit /set {__UUID__} device partition=C: &amp;gt; bcdedit /set {__UUID__} path \grldr.mbr &amp;gt; bcdedit /displayorder {__UUID__} /addlast  grub  [/etc/default/grub] GRUB_TIMEOUT=4   $ sudo update-grub2  サスペンドからの復帰 ほとんど唯一といっていい困ったことが、サスペンドから（たぶんXが）復帰してくれない、という動きでした。</description>
    </item>
    
    <item>
      <title>AppleScript演算子リファレンス</title>
      <link>https://mvrck.jp/documents/applescript-operators/</link>
      <pubDate>Tue, 27 Dec 2011 15:09:27 +0900</pubDate>
      
      <guid>https://mvrck.jp/documents/applescript-operators/</guid>
      <description>AppleScript の演算子と、結合の優先順位一覧です。
同じ意味の演算子でも数多くの表記方法が存在します（ is not は isn&#39;t でもいい、などなど）。本表では個人的によく使うもの以外は省略しています。
演算子    機能 演算子 備考     加算 (Addition) +    減算 (Subtraction) -    乗算 (Multiplication) *    除算 (Division) /,
÷    整数除算 (Integral division) div    剰余・余り (Remainder) mod    累乗 (Exponentiation) ^    否定 (Negation) not    連言・論理積 (Logical conjunction) and    選言・論理和 (Logical disjunction) or    等しい (Equality) =,</description>
    </item>
    
    <item>
      <title>Motorola Flipout 分解＆キーパッド交換</title>
      <link>https://mvrck.jp/blog/flipout-us-keypad/</link>
      <pubDate>Fri, 02 Dec 2011 00:00:00 +0000</pubDate>
      
      <guid>https://mvrck.jp/blog/flipout-us-keypad/</guid>
      <description>Motorola Flipout の US 印字キーパッドが届いたので、本体を分解して交換しました。
   Motorola Flipout 分解 (1)    Motorola Flipout 分解 (2)  裏蓋を外すと、カメラ側にトルクスねじ（たぶんT2）が3か所あります。手持ちの工具がないので、溝を掘り下げて強引に回しました（非推奨）。スピーカー側はつめで引っかかっているだけなので、かぱっとカメラ方向にずらすだけで、基盤を覆っている部分が外れます。
覆いを外した勢いで SIM カードを保持する部品もいっしょに取れます。ボリュームボタンと電源ボタンもなくしやすいです。開けた弾みでどこかに飛んでいかないよう注意です。
  Motorola Flipout 分解 (3)  基盤をフレームに固定しているねじは4か所。径は前のねじと同じで、長さが少し短いものでした。堅いケーブルの下にあるねじは、近くの端子を外してから。
これでキーパッドにたどり着きます。
   Motorola Flipout 分解 (4)    Motorola Flipout 分解 (5) キーボード取り替え  キーパッドは下のシートで圧力を検知しているだけなので、配線や特別な工夫は要りません。接着されている元のキーをぺりぺりとはがして新しいものを取り付けるだけです。周囲にはくぼみが多くあって、一度組み立てれば簡単には動かないので、特に接着はしなくても平気だと思います。
元通りに組み立てれば完成です。
  Motorola Flipout  HK 版はキーボード上に入力補助記号があって印字がごちゃごちゃしていたので、黒いインクを塗って目立たないようにしていました。これですっきり。
Flipout ネタはこれでひととおりやりつくした感がありますが、まだまだメイン機としてがしがし使い続けたいと思います。</description>
    </item>
    
    <item>
      <title>Motorola Flipout キーボードカスタマイズ</title>
      <link>https://mvrck.jp/blog/flipout-keyboard-config/</link>
      <pubDate>Mon, 13 Jun 2011 00:00:00 +0000</pubDate>
      
      <guid>https://mvrck.jp/blog/flipout-keyboard-config/</guid>
      <description>ちいささと、ころっとした外見、ぷちぷちした感触のキーボードがだいぶ気に入ってしまって、ローエンド機種だし動作は遅めだし公式アップデートはたぶん来ないけれど、ここのところメイン機になっている Motorola Flipout MB511 ですが、キーボードの設定をいじって文字入力をより快適にしてみました。要root権取得。
   MB511    MB511  けっこう打ちやすい Flipout のキーボードで少し不満なのが、
 Wnn系のIMで、日本語・英語の入力切り替え Shift+Space が押しにくい（Shift が左端にあって中心から遠い）。 日本語ではそれなりに使うハイフンが Alt+Z に割り当てられていて、両手の親指でぽちぽち入力するときに動きが大きくて煩わしい。  というところで、どうにかならないかといろいろとAndroidのキーボードカスタマイズ情報を探すと、
 /system/usr/keylayout/*.kl ： ハードキーに対応するキーコードを設定 /system/usr/keychars/*.kcm.bin ： キーコードに対応して入力される文字を設定  というファイルをいじればよさそうです。 logcat を眺めた感じでは、手持ちの HK版Flipout で使われていたのは次の2つ。本体からコピーしてきます。
 sholes-keypad.kl sholes-keypad.kcm.bin  日本語・英語の入力切り替えをしやすく。 (sholes-keypad.kl) まず、スペースの右隣に「A|中」という何も反応しないキー（たぶん日本語入力でいうところの文字キー）があるので、それを Shift+Space に割り当てられないかと思ったものの、修飾キーつきの割り当てはファイルをいじるだけでは無理なようでした。
仕方がないので、右手親指だけで スペース+A|中 が押せるのを利用することにして、「A|中」キーには Shift に割り当てることにしました。手の動きが減って、なんとなく手間が減ったような気になれます。
*.kl ファイルは、単純にスキャンコードとキーコードが並ぶテキストファイルで、キーコードは android.view.KeyEvent で定義されている定数の先頭（KEYCODE_）を省いたものを書けるようです。「A|中」キーのスキャンコードは 162 で、これを SHIFT_RIGHT に変えました。
#key 162 EXPLORER WAKE_DROPPED key 162 SHIFT_RIGHT WAKE_DROPPED  あと、試しに音量アップキーをカメラキーに置き換えてみました。</description>
    </item>
    
  </channel>
</rss>